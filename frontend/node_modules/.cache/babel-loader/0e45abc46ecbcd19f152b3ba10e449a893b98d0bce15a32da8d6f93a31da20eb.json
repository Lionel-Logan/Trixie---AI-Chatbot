{"ast":null,"code":"var _jsxFileName = \"D:\\\\Trixie\\\\Trixie---AI-Chatbot\\\\frontend\\\\src\\\\Sample.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sample = () => {\n  const handleGoogleSignIn = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/auth/google\");\n      const data = await response.json();\n      if (data.url) {\n        window.location.href = data.url; // Redirect to Google sign-in page\n      } else {\n        console.error(\"Failed to get auth URL\");\n      }\n    } catch (error) {\n      console.error(\"Google Sign-in Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleSignIn,\n      className: \"bg-blue-500 text-white px-6 py-3 rounded-lg hover:bg-blue-600\",\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = Sample;\nexport default Sample;\nvar _c;\n$RefreshReg$(_c, \"Sample\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Sample","handleGoogleSignIn","response","fetch","data","json","url","window","location","href","console","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Trixie/Trixie---AI-Chatbot/frontend/src/Sample.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Sample = () => {\r\n  const handleGoogleSignIn = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/auth/google\");\r\n      const data = await response.json();\r\n      if (data.url) {\r\n        window.location.href = data.url; // Redirect to Google sign-in page\r\n      } else {\r\n        console.error(\"Failed to get auth URL\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Google Sign-in Error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen\">\r\n      <button\r\n        onClick={handleGoogleSignIn}\r\n        className=\"bg-blue-500 text-white px-6 py-3 rounded-lg hover:bg-blue-600\"\r\n      >\r\n        Sign in with Google\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sample;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnB,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;MACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,GAAG,EAAE;QACZC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGL,IAAI,CAACE,GAAG,CAAC,CAAC;MACnC,CAAC,MAAM;QACLI,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;MACzC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,+CAA+C;IAAAC,QAAA,eAC5Dd,OAAA;MACEe,OAAO,EAAEb,kBAAmB;MAC5BW,SAAS,EAAC,+DAA+D;MAAAC,QAAA,EAC1E;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACC,EAAA,GAzBInB,MAAM;AA2BZ,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}